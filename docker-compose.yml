services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET_KEY=your-super-secret-jwt-key-change-this-in-production
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - DATABASE_URL=sqlite:///./theai.db
      - UPLOAD_DIR=uploads
      - ASEXUAL_MODEL_PATH=./yolov9cbestsofar 130epocs no finetune.pt
      - RBC_MODEL_PATH=./rbc counter.pt
      - STAGE_MODEL_PATH=./yolov9 for segmenting parasit stages.pt
    volumes:
      - ./backend:/app
      - uploads_data:/app/uploads
    depends_on:
      - redis
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  celery-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET_KEY=your-super-secret-jwt-key-change-this-in-production
      - ACCESS_TOKEN_EXPIRE_MINUTES=43200
      - DATABASE_URL=sqlite:///./theai.db
      - UPLOAD_DIR=uploads
      - ASEXUAL_MODEL_PATH=./yolov9cbestsofar 130epocs no finetune.pt
      - RBC_MODEL_PATH=./rbc counter.pt
      - STAGE_MODEL_PATH=./yolov9 for segmenting parasit stages.pt
    volumes:
      - ./backend:/app
      - uploads_data:/app/uploads
    depends_on:
      - redis
    command: celery -A celery_app worker --concurrency=2 --loglevel=info
    deploy:
      resources:
        limits:
          memory: 4G      # FOR 4-CORE: 4GB limit | FOR 8-CORE: Change to 6G or 8G
          cpus: '3.5'     # FOR 4-CORE: 3.5 cores | FOR 8-CORE: Change to '7.0' or '8.0'
        reservations:
          memory: 1G      # FOR 4-CORE: 1GB reserve | FOR 8-CORE: Change to 2G
          cpus: '2.0'     # FOR 4-CORE: 2 cores reserve | FOR 8-CORE: Change to '4.0'
    healthcheck:
      test: ["CMD-SHELL", "celery -A celery_app inspect ping || exit 1"]
      interval: 60s
      timeout: 10s
      retries: 3
    restart: unless-stopped

volumes:
  redis_data:
  uploads_data: